#+title: 工作用文本编辑器的选择于配置
#+author: 黄耀庭
#+PROPERTY: header-args:emacs-lisp :tangle ~/.config/emacs/init.el :mkdirp yes

* 起源
* Emacs
** 开始
*** EMACS CUSTOM
在载入颜色主题和 package 时, emacs 会在 init.el 里自动创建配置代码, 这里提前载入这些
#+begin_src emacs-lisp
(setq custom-file "~/.config/emacs/custom.el")
(load custom-file)
#+end_src

*** 设置个人信息
设置个人信息; 其中邮箱主要用于gpg加密相关进程
#+begin_src emacs-lisp
(setq user-full-name "黄耀庭"
      user-mail-address "dariush4691@outlook.com")
#+end_src
*** 设置字体
设置字体, 注意如果emacs使用守护进程的方式启动, 需要使用把字体设置加入HOOK中
#+begin_src emacs-lisp
(defvar darius/default-font-size 200)
(defun darius/set-font ()
  (set-face-attribute 'default nil :font "更纱黑体 Mono SC Nerd" :height darius/default-font-size)
  (set-face-attribute 'variable-pitch nil :font "思源宋体" :height darius/default-font-size :weight 'regular)
  (set-face-attribute 'fixed-pitch nil :font "更纱黑体 Mono SC Nerd" :height darius/default-font-size :weight 'regular))
(if (daemonp)
    (add-hook 'server-after-make-frame-hook #'darius/set-font)
    (darius/set-font))
#+end_src
*** 软件源设置
#+begin_src emacs-lisp
(require 'package) ; This should be autoloaded. I'm putting this line here just in case not.
(setq package-archives '(("melpa" . "http://mirrors.tuna.tsinghua.edu.cn/elpa/melpa/")
			 ("org" . "http://mirrors.tuna.tsinghua.edu.cn/elpa/org/")
			 ("elpa" . "http://mirrors.tuna.tsinghua.edu.cn/elpa/gnu/")))
(package-initialize)
(unless package-archive-contents
 (package-refresh-contents))
#+end_src
*** 初始界面设置
#+begin_src emacs-lisp
(setq inhibit-startup-message t)
(scroll-bar-mode -1)        ; Disable visible scrollbar
(tool-bar-mode -1)          ; Disable the toolbar
(tooltip-mode -1)           ; Disable tooltips
(set-fringe-mode 10)        ; Give some breathing room, modify the spacing 
(menu-bar-mode -1)          ; Disable the menu bar
(setq visible-bell t)       ; do not sound the bell. Instead, use visual blink
(electric-pair-mode)        ; toggle auto-pair-mode
#+end_src
** 使用软件包
*** =use-package=
Bootstrip use-package
#+begin_src emacs-lisp
(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))
(eval-when-compile (require 'use-package))
(setq use-package-always-ensure t)
#+end_src

** 提升操作体验
*** EVIL mode
vim style undo not needed for emacs 28
#+begin_src emacs-lisp
(use-package undo-fu)
(use-package evil
  :demand t
  :bind (("<escape>" . keyboard-escape-quit))
  :init
  ;; allows for using cgn
  ;; (setq evil-search-module 'evil-search)
  (setq evil-want-keybinding nil)
  ;; no vim insert bindings
  (setq evil-undo-system 'undo-fu)
  :config
  (evil-mode 1)
  (evil-set-leader nil (kbd "C-;"))
  (evil-set-leader 'normal (kbd "SPC"))
  (evil-set-leader 'normal "\\" t) ;Set localleader if last arg is non-nil 
  )
#+end_src

vim key bindings everywhere else
#+begin_src emacs-lisp
(use-package evil-collection
  :after evil
  :config
  (setq evil-want-integration t)
  (evil-collection-init))
#+end_src

the popular evil-surrond corresponding to vim
#+begin_src emacs-lisp
(use-package evil-surround
  :ensure t
  :config
  (global-evil-surround-mode 1))
#+end_src

** 减轻大脑负担
*** 使用主题
#+begin_src emacs-lisp
;;; Using A Eyecandy Theme
(use-package gruvbox-theme
  :after evil
  :config
  (load-theme 'gruvbox))
#+end_src

modeline
#+begin_src emacs-lisp
(use-package doom-modeline
  :ensure t
  :init (doom-modeline-mode 1)
  :custom ((doom-modeline-height 15)))
(use-package nyan-mode
  :ensure t
  :init (nyan-mode))
#+end_src

彩虹括号
#+begin_src emacs-lisp
;; rainbow parrent
(use-package rainbow-delimiters
  :hook (prog-mode . rainbow-delimiters-mode))
;; add leftside line number when in coding mode
(add-hook 'prog-mode-hook #'display-line-numbers-mode)
#+end_src

*** which-KEY
#+begin_src emacs-lisp
(use-package which-key
  :init (which-key-mode)
  :diminish which-key-mode
  :config
  (setq which-key-idle-delay 0.3))
#+end_src

*** MINIBUFFER补全
#+begin_src emacs-lisp
;;;Vertical is for simple completion
(use-package vertico
  :config
  (vertico-mode))
#+end_src

#+begin_src emacs-lisp
(use-package ivy
  :diminish
  :after evil
  :bind (:map ivy-minibuffer-map
         ("TAB" . ivy-alt-done)	
         ("C-l" . ivy-alt-done)
         ("C-j" . ivy-next-line)
         ("C-k" . ivy-previous-line)
         :map ivy-switch-buffer-map
         ("C-k" . ivy-previous-line)
         ("C-l" . ivy-done)
         ("C-d" . ivy-switch-buffer-kill)
         :map ivy-reverse-i-search-map
         ("C-k" . ivy-previous-line)
         ("C-d" . ivy-reverse-i-search-kill))
  :config
  (ivy-mode 1)
  (setq ivy-use-virtual-buffeers t)
  (setq enable-recursive-minibuffers t))

(use-package counsel
  :after (evil ivy)
  :bind (("M-x" . counsel-M-x)
         ("C-s" . swiper)
         ("C-x b" . counsel-ibuffer)
         ("C-x C-f" . counsel-find-file)
	 ("C-h f" . counsel-describe-function)
	 ("C-h v" . counsel-describe-variable)
	 ("C-h o" . counsel-describe-symbol)
         :map minibuffer-local-map
         ("C-r" . 'counsel-minibuffer-history)
	 :map evil-normal-state-map
	 ("<leader>b" . 'counsel-switch-buffer)
	 ("<leader>f" . 'counsel-find-file)
	 ("<leader>?" . 'counsel-rg)))

(use-package all-the-icons-ivy-rich
  :ensure t
  :init (all-the-icons-ivy-rich-mode 1)) 

(use-package ivy-rich
  :ensure t
  :after (ivy counsel)
  :init (ivy-rich-mode 1))
#+end_src

** ORG-MODE
*** 全局设置
#+begin_src emacs-lisp
(global-set-key (kbd "C-c l") #'org-store-link)
(global-set-key (kbd "C-c a") #'org-agenda)
(global-set-key (kbd "C-c c") #'org-capture)
(add-hook 'org-mode-hook #'org-indent-mode) ; add virtual indentation
#+end_src

#+begin_src emacs-lisp
(setq org-directory "~/org"
      org-agenda-files '("~/org/agenda.org" "~/org/notes.org")
      org-archive-location "~/org/archive.org::* From %s"
      org-default-notes-file "~/org/notes.org"
      org-qgenda-start-with-log-mode t
      org-log-done 'time
      org-log-into-drawer t
      org-edit-src-content-indentation 0
      org-confirm-babel-evaluate nil
      org-babel-lisp-eval-fn #'sly-eval
      org-highlight-latex-and-related '(native script entities))
(use-package mixed-pitch
  :hook (org-mode . mixed-pitch-mode))
#+end_src

*** BABEL
#+begin_src emacs-lisp
;; active Babel languages
(org-babel-do-load-languages
 'org-babel-load-languages
 '((python . t)
   (C . t)
   (lua . t)
   (gnuplot . t)
   (dot . t)
   (plantuml . t)
   (latex . t)
   (shell . t)
   (scheme . t)
   (lisp . t)
   (haskell . t)
   (emacs-lisp . t)))
(use-package gnuplot)
(use-package sly)
(use-package plantuml-mode)
(use-package lua-mode)
#+end_src

*** EXPORTER

#+begin_src emacs-lisp
;; orgmode export latex template
(with-eval-after-load 'ox-latex
  (setq org-latex-compiler "xelatex")
  (setq org-latex-pdf-process '("latexmk -%latex -quiet -shell-escape -f %f"))
  (add-to-list 'org-latex-classes
           '("myreport"
             "\\documentclass{minereport}
              [DEFAULT-PACKAGES]
              [PACKAGES]
              [EXTRA]"
             ("\\section{%s}" . "\\section*{%s}")
             ("\\subsection{%s}" . "\\subsection*{%s}")
             ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
             ("\\paragraph{%s}" . "\\paragraph*{%s}")
             ("\\subparagraph{%s}" . "\\subparagraph*{%s}")))
  (add-to-list 'org-latex-classes
             '("elegantpaper"
               "\\documentclass[lang=cn,11pt,a4paper,cite=authoryear,fontset=none]{elegantpaper}
\\setCJKmainfont[BoldFont={FZHTK--GBK1-0},ItalicFont={FZKTK--GBK1-0}]{FZSSK--GBK1-0}
\\setCJKsansfont[BoldFont={FZHTK--GBK1-0},ItalicFont={FZHTK--GBK1-0}]{FZHTK--GBK1-0}
\\setCJKmonofont[BoldFont={FZHTK--GBK1-0},ItalicFont={FZHTK--GBK1-0}]{FZFSK--GBK1-0}
\\setCJKfamilyfont{zhsong}{FZSSK--GBK1-0}
\\setCJKfamilyfont{zhhei}{FZHTK--GBK1-0}
\\setCJKfamilyfont{zhkai}{FZKTK--GBK1-0}
\\setCJKfamilyfont{zhfs}{FZFSK--GBK1-0}
\\newcommand*{\\songti}{\\CJKfamily{zhsong}}
\\newcommand*{\\heiti}{\\CJKfamily{zhhei}}
\\newcommand*{\\kaishu}{\\CJKfamily{zhkai}}
\\newcommand*{\\fangsong}{\\CJKfamily{zhfs}}
[DEFAULT-PACKAGES]
[PACKAGES]
[EXTRA]"
               ("\\section{%s}" . "\\section*{%s}")
               ("\\subsection{%s}" . "\\subsection*{%s}")
               ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
               ("\\paragraph{%s}" . "\\paragraph*{%s}")
               ("\\subparagraph{%s}" . "\\subparagraph*{%s}")))
    (setq org-latex-default-class "elegantpaper"))
(use-package ox-pandoc
  :config
  (setq org-pandoc-options-for-latex-pdf
	'((pdf-engine . "xelatex")
	  (listings . t)
	  (template . eisvogel)
	  (variable . "CJKmainfont=SourceHanSansSC-Regular")
	  (lua-filter . "no-code-attributes.lua"))))
#+end_src

*** ROAM
#+begin_src emacs-lisp
;; Here's a very basic sample for configuration of org-roam using use-package:
(use-package org-roam
  :ensure t
  :custom
  (org-roam-directory (file-truename "~/org-roam"))
  :bind (("C-c n l" . org-roam-buffer-toggle)
         ("C-c n f" . org-roam-node-find)
         ("C-c n g" . org-roam-graph)
         ("C-c n i" . org-roam-node-insert)
         ("C-c n c" . org-roam-capture)
         ;; Dailies
         ("C-c n j" . org-roam-dailies-capture-today))
  :config
  ;; If you're using a vertical completion framework, you might want a more informative completion interface
  (setq org-roam-node-display-template (concat "${title:*} " (propertize "${tags:10}" 'face 'org-tag)))
  (org-roam-db-autosync-mode)
  ;; If using org-roam-protocol
  (require 'org-roam-protocol))
#+end_src

** LATEX
#+begin_src emacs-lisp
;; latex
(use-package cdlatex
  :bind (:map cdlatex-mode-map
	 ("C-c C-{" . nil)
	 ("C-c C-," . cdlatex-environment))
  :hook (LaTeX-mode . cdlatex-mode))
(use-package auctex-latexmk
  :config
  (auctex-latexmk-setup))
(Use-package evil-tex
  :hook (LaTeX-mode . evil-tex-mode))
(add-hook 'LaTeX-mode-hook 'turn-on-auto-fill) ; 在latex模式下输入文字自动换行
#+end_src
** 软件
*** 输入法
#+begin_src emacs-lisp
;; INPUT METHOD

(use-package posframe)

(use-package pyim
  :config
  (setq pyim-page-tooltip 'posframe)
  (setq pyim-punctuation-translate-p '(no auto yes)) ;全角半角问题
  (setq pyim-punctuation-dict nil) ;全角半角问题
  (setq default-input-method "pyim")
  (pyim-default-scheme 'xiaohe-shuangpin)
  (pyim-extra-dicts-add-dict
    `(:name "Greatdict"
      :file "~/.config/emacs/pyim-greatdict.pyim.gz"
      :coding utf-8-unix
      :dict-type pinyin-dict)))
#+end_src

*** 文件管理器
#+begin_src emacs-lisp
;; 文件管理器
(use-package dired
  :ensure nil
  :commands (dired dired-jump)
  :bind (("C-x C-j" . dired-jump))
  :custom ((dired-listing-switches "-agho --group-directories-first"))
  :config
  (evil-collection-define-key 'normal 'dired-mode-map
    "h" 'dired-single-up-directory
    "l" 'dired-single-buffer))

(use-package dired-single
  :commands (dired dired-jump))

(use-package all-the-icons-dired
  :hook (dired-mode . all-the-icons-dired-mode))

(use-package dired-open
  :commands (dired dired-jump)
  :config
  ;; Doesn't work as expected!
  ;;(add-to-list 'dired-open-functions #'dired-open-xdg t)
  (setq dired-open-extensions '(("png" . "feh")
                                ("mkv" . "mpv"))))

(use-package dired-hide-dotfiles
  :hook (dired-mode . dired-hide-dotfiles-mode)
  :config
  (evil-collection-define-key 'normal 'dired-mode-map
    "H" 'dired-hide-dotfiles-mode))
#+end_src

** 软件试验场
#+begin_src emacs-lisp
(use-package ggtags)
(use-package call-graph
  :config
  (evil-define-key 'normal call-graph-mode
    "e" 'cg-widget-expand-all
    "c" 'cg-widget-collapse-all
    "p" 'widget-backward
    "n" 'widget-forward
    "q" 'cg-quit
    "+" 'cg-expand
    "_" 'cg-collapse
    "o" 'cg-goto-file-at-point
    "g" 'cg-at-point
    "d" 'cg-remove-caller
    "l" 'cg-select-caller-location
    "r" 'cg-reset-caller-cache
    "t" 'cg-toggle-show-func-args
    "f" 'cg-toggle-invalid-reference
    (kbd "<RET>") 'cg-goto-file-at-point))
#+end_src

* LATEX
** 如何制作一个 =cls= 模板
自己新建的Latex模板需要放在特定文件夹下, 从而可以被 =\documentclass= 找到:
- unix: =~/texmf/tex/latex/[任意]/[自定义模板名].cls=

*** 指定文件路经
You could create a folder below your TeX home directory and put your .sty file therein. Use this command at the command prompt to find out where:
#+begin_src shell
kpsewhich -var-value=TEXMFHOME
#+end_src
*** 文件头申明
Latex 模板需要包含如字段, 一般
| 标志           | 值        | 说明                                       |
|----------------+-----------+--------------------------------------------|
| NeedsTexFormat | LaTeX2e   | 可以使用当前cls的latex版本                 |
| ProcidesClass  | myscratcl | cls的名称, 需要于文件名保持一致            |
| LoadClass      | scrartcl  | 载入其它的class, 方便在其它class之上做修改 |
#+begin_src latex :tangle ~/texmf/tex/latex/darius/myscrartcl.cls :mkdirp yes
\NeedsTeXFormat{LaTeX2e}
\ProvidesClass{myscratcl}
\LoadClass[
  english,
  paper=a4,
  ,captions=tableheading
]{scrartcl}
#+end_src

#+begin_src latex :tangle ~/texmf/tex/latex/darius/myscrartcl.cls :mkdirp yes
\RequirePackage{amsmath} % for math
\RequirePackage{amssymb} % for math
\RequirePackage{lmodern} % for loading high quality fonts.
\RequirePackage{xcolor} % provided the define color macro

\RequirePackage{setspace} % set space
\setstretch{1.2}
% The fllowing three commands rely on xelatex according to the
% Eisvogel pandoc Latex Template
\RequirePackage{unicode-math}
\defaultfontfeatures{Scale=MatchLowercase}
\defaultfontfeatures[\rmfamily]{Ligatures=TeX,Scale=1}

\RequirePackage{upquote}
\RequirePackage{microtype}
\UseMicrotypeSet[protrusion]{basicmath} % disable protrusion for tt fonts

\makeatletter
\KOMAoptions{parskip=half}
\makeatother

\definecolor{default-linkcolor}{HTML}{A50000}
\definecolor{default-filecolor}{HTML}{A50000}
\definecolor{default-citecolor}{HTML}{4077C0}
\definecolor{default-urlcolor}{HTML}{4077C0}

\RequirePackage{xurl}
\RequirePackage{bookmark}

% Options for packages loaded elsewhere. I don't know what these does,
% however just copying frmo the eisvogel template
\PassOptionsToPackage{unicode}{hyperref}
\PassOptionsToPackage{hyphens}{url}
\PassOptionsToPackage{dvipsnames,svgnames,x11names,table}{xcolor}

\RequirePackage{listings} % provided code block and highlight

% Since our documents might includes code blocks, we need to make it
% prettier. The default listing color is black and white with
% different font faces to distinguish keywords. I use ayu color theme.
\definecolor{listing-background}{HTML}{FFFFFF}
\definecolor{listing-rule}{HTML}{D9D8D7}
\definecolor{listing-numbers}{HTML}{D9D8D7}
\definecolor{listing-text-color}{HTML}{5C6773}
\definecolor{listing-keyword}{HTML}{F29718}
\definecolor{listing-keyword-2}{HTML}{A37ACC} % additional keywords
\definecolor{listing-keyword-3}{HTML}{E7C547} % additional keywords
\definecolor{listing-identifier}{HTML}{36A3D9}
\definecolor{listing-string}{HTML}{86B300}
\definecolor{listing-comment}{HTML}{ABB0B6}
% I don't know how to define a listing style, so I just copy the
% listing style from the eisvogel pandoc templates.
\lstdefinestyle{ayu}{
  language         = java,
  numbers          = left,
  xleftmargin      = 2.7em,
  framexleftmargin = 2.5em,
  backgroundcolor  = \color{listing-background},
  basicstyle       = \color{listing-text-color}\linespread{1.0}%
                      \lst@ifdisplaystyle%
                      \small%
                      \fi\ttfamily{},
  breaklines       = true,
  frame            = single,
  framesep         = 0.19em,
  rulecolor        = \color{listing-rule},
  frameround       = ffff,
  tabsize          = 4,
  numberstyle      = \color{listing-numbers},
  aboveskip        = 1.0em,
  belowskip        = 0.1em,
  abovecaptionskip = 0em,
  belowcaptionskip = 1.0em,
  keywordstyle     = {\color{listing-keyword}\bfseries},
  keywordstyle     = {[2]\color{listing-keyword-2}\bfseries},
  keywordstyle     = {[3]\color{listing-keyword-3}\bfseries\itshape},
  sensitive        = true,
  identifierstyle  = \color{listing-identifier},
  commentstyle     = \color{listing-comment},
  stringstyle      = \color{listing-string},
  showstringspaces = false,
  escapeinside     = {/*@}{@*/}, % Allow LaTeX inside these special comments
  literate         =
  {á}{{\'a}}1 {é}{{\'e}}1 {í}{{\'i}}1 {ó}{{\'o}}1 {ú}{{\'u}}1
  {Á}{{\'A}}1 {É}{{\'E}}1 {Í}{{\'I}}1 {Ó}{{\'O}}1 {Ú}{{\'U}}1
  {à}{{\`a}}1 {è}{{\'e}}1 {ì}{{\`i}}1 {ò}{{\`o}}1 {ù}{{\`u}}1
  {À}{{\`A}}1 {È}{{\'E}}1 {Ì}{{\`I}}1 {Ò}{{\`O}}1 {Ù}{{\`U}}1
  {ä}{{\"a}}1 {ë}{{\"e}}1 {ï}{{\"i}}1 {ö}{{\"o}}1 {ü}{{\"u}}1
  {Ä}{{\"A}}1 {Ë}{{\"E}}1 {Ï}{{\"I}}1 {Ö}{{\"O}}1 {Ü}{{\"U}}1
  {â}{{\^a}}1 {ê}{{\^e}}1 {î}{{\^i}}1 {ô}{{\^o}}1 {û}{{\^u}}1
  {Â}{{\^A}}1 {Ê}{{\^E}}1 {Î}{{\^I}}1 {Ô}{{\^O}}1 {Û}{{\^U}}1
  {œ}{{\oe}}1 {Œ}{{\OE}}1 {æ}{{\ae}}1 {Æ}{{\AE}}1 {ß}{{\ss}}1
  {ç}{{\c c}}1 {Ç}{{\c C}}1 {ø}{{\o}}1 {å}{{\r a}}1 {Å}{{\r A}}1
  {€}{{\EUR}}1 {£}{{\pounds}}1 {«}{{\guillemotleft}}1
  {»}{{\guillemotright}}1 {ñ}{{\~n}}1 {Ñ}{{\~N}}1 {¿}{{?`}}1
  {…}{{\ldots}}1 {≥}{{>=}}1 {≤}{{<=}}1 {„}{{\glqq}}1 {“}{{\grqq}}1
  {”}{{''}}1
}
\lstset{style=ayu}
#+end_src
